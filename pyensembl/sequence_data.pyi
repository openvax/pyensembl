# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

from typing import TYPE_CHECKING, Dict, List, Optional

if TYPE_CHECKING:
    import logging

logger: logging.Logger = ...

class SequenceData(object):
    def __init__(
        self, fasta_paths: List[str], cache_directory_path: Optional[str] = None
    ) -> None: ...
    def _init_lazy_fields(self) -> None: ...
    def clear_cache(self) -> None: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
    def __contains__(self, sequence_id: str) -> bool: ...
    def __eq__(self, other) -> bool: ...
    def __hash__(self) -> int: ...
    def _add_to_fasta_dictionary(
        self, fasta_dictionary_tmp: Dict[str, str]
    ) -> None: ...
    def _load_or_create_fasta_dictionary_pickle(self) -> None: ...
    def index(self, overwrite: bool = False) -> None: ...
    @property
    def fasta_dictionary(self) -> Dict[str, str]: ...
    def get(self, sequence_id: str) -> str: ...
